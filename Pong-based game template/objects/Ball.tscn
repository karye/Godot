[gd_scene load_steps=4 format=2]

[sub_resource type="PhysicsMaterial" id=1]
friction = 0.0
bounce = 1e+15

[sub_resource type="GDScript" id=2]
script/source = "extends RigidBody2D

signal out_of_screen

export(Color) var color
export(int) var radius

onready var edges = {
	x = get_viewport_rect().end.x + radius,
	y = get_viewport_rect().end.y + radius
}

func _process(delta):
	# check out of screen
	if self.position.x > edges.x or self.position.x < -radius or \\
	   self.position.y > edges.y or self.position.y < -radius:
		emit_signal(\"out_of_screen\")
		self.queue_free()

func _draw():
	draw_circle(Vector2(0, 0), radius, color)
"

[sub_resource type="CircleShape2D" id=3]
radius = 13.0

[node name="Ball" type="RigidBody2D"]
physics_material_override = SubResource( 1 )
gravity_scale = 0.0
contact_monitor = true
can_sleep = false
linear_velocity = Vector2( 0, 300 )
linear_damp = 0.0
script = SubResource( 2 )
color = Color( 0.376471, 0.894118, 0.396078, 0.54902 )
radius = 13

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 3 )
